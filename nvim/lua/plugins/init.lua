local status = pcall(require, "plugins.packer")
if not status then
  vim.notify_once("Packer loading failed", vim.log.levels.ERROR)
  return
end

local utils = require("utils")

utils.plugin_setup("plugins.catppuccin", "catppuccin")
utils.plugin_setup("plugins.clojure")
utils.plugin_setup("plugins.coc-nvim")
utils.plugin_setup("plugins.conjure")
utils.plugin_setup("plugins.dracula", "dracula")
utils.plugin_setup("plugins.editorconfig")
utils.plugin_setup("plugins.everblush", "everblush")
utils.plugin_setup("plugins.lualine", "lualine")
utils.plugin_setup("plugins.minimap")
utils.plugin_setup("plugins.nvim-comment", "nvim_comment")
utils.plugin_setup("plugins.nvim-surround", "nvim-surround")
utils.plugin_setup("plugins.nvim-tree", "nvim-tree")
utils.plugin_setup("plugins.nvim-treesitter", "nvim-treesitter")
utils.plugin_setup("plugins.onedark", "onedark")
utils.plugin_setup("plugins.previm")
utils.plugin_setup("plugins.scratch")
utils.plugin_setup("plugins.session-manager", "session_manager")
utils.plugin_setup("plugins.splitjoin")
utils.plugin_setup("plugins.switch")
utils.plugin_setup("plugins.telescope", "telescope")
utils.plugin_setup("plugins.tokyonight", "tokyonight")
utils.plugin_setup("plugins.treesitter-context", "treesitter-context")
utils.plugin_setup("plugins.vim-json")
utils.plugin_setup("plugins.vim-sexp")
utils.plugin_setup("plugins.which-key", "which-key")
utils.plugin_setup("plugins.wilder", "wilder")
utils.plugin_setup("plugins.zprint")
